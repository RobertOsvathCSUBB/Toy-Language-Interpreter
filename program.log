ExeStack:
{ int a; a = 2 + 3 * 5 | int b | b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ }
Out:
[ ]


ExeStack:
{ a = 2 + 3 * 5 | int b | b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ a -> 0; }
Out:
[ ]


ExeStack:
{ a = 2 + 3 * 5; int b | b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ a -> 0; }
Out:
[ ]


ExeStack:
{ int b | b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ a -> 17; }
Out:
[ ]


ExeStack:
{ int b; b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ a -> 17; }
Out:
[ ]


ExeStack:
{ b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ a -> 17; b -> 0; }
Out:
[ ]


ExeStack:
{ b = a - 4 / 2 + 7; print(b); }
SymTable:
{ a -> 17; b -> 0; }
Out:
[ ]


ExeStack:
{ print(b); }
SymTable:
{ a -> 17; b -> 22; }
Out:
[ ]


ExeStack:
{ }
SymTable:
{ a -> 17; b -> 22; }
Out:
[ 22, ]


ExeStack:
{ int v; v = 2 | print(v); }
SymTable:
{ }
Out:
[ ]


ExeStack:
{ v = 2 | print(v); }
SymTable:
{ v -> 0; }
Out:
[ ]


ExeStack:
{ v = 2; print(v); }
SymTable:
{ v -> 0; }
Out:
[ ]


ExeStack:
{ print(v); }
SymTable:
{ v -> 2; }
Out:
[ ]


ExeStack:
{ }
SymTable:
{ v -> 2; }
Out:
[ 2, ]


ExeStack:
{ int v; v = 2 | print(v); }
SymTable:
{ }
Out:
[ ]


ExeStack:
{ v = 2 | print(v); }
SymTable:
{ v -> 0; }
Out:
[ ]


ExeStack:
{ v = 2; print(v); }
SymTable:
{ v -> 0; }
Out:
[ ]


ExeStack:
{ print(v); }
SymTable:
{ v -> 2; }
Out:
[ ]


ExeStack:
{ }
SymTable:
{ v -> 2; }
Out:
[ 2, ]


ExeStack:
{ string varf; varf = test.in | openRFile(varf) | int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ }
Out:
[ ]


ExeStack:
{ varf = test.in | openRFile(varf) | int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> ; }
Out:
[ ]


ExeStack:
{ varf = test.in; openRFile(varf) | int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> ; }
Out:
[ ]


ExeStack:
{ openRFile(varf) | int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; }
Out:
[ ]


ExeStack:
{ openRFile(varf); int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; }
Out:
[ ]


ExeStack:
{ int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; }
Out:
[ ]


ExeStack:
{ int varc; readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; }
Out:
[ ]


ExeStack:
{ readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 0; }
Out:
[ ]


ExeStack:
{ readFile(varf, varc); print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 0; }
Out:
[ ]


ExeStack:
{ print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 15; }
Out:
[ ]


ExeStack:
{ print(varc); readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 15; }
Out:
[ ]


ExeStack:
{ readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 15; }
Out:
[ 15, ]


ExeStack:
{ readFile(varf, varc); print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 15; }
Out:
[ 15, ]


ExeStack:
{ print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 50; }
Out:
[ 15, ]


ExeStack:
{ print(varc); closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 50; }
Out:
[ 15, ]


ExeStack:
{ closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 50; }
Out:
[ 15, 50, ]


ExeStack:
{ }
SymTable:
{ varf -> test.in; varc -> 50; }
Out:
[ 15, 50, ]


ExeStack:
{ int v; v = 2 | print(v); }
SymTable:
{ }
Out:
[ ]


ExeStack:
{ v = 2 | print(v); }
SymTable:
{ v -> 0; }
Out:
[ ]


ExeStack:
{ v = 2; print(v); }
SymTable:
{ v -> 0; }
Out:
[ ]


ExeStack:
{ print(v); }
SymTable:
{ v -> 2; }
Out:
[ ]


ExeStack:
{ }
SymTable:
{ v -> 2; }
Out:
[ 2, ]


ExeStack:
{ int a; a = 2 + 3 * 5 | int b | b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ }
Out:
[ ]


ExeStack:
{ a = 2 + 3 * 5 | int b | b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ a -> 0; }
Out:
[ ]


ExeStack:
{ a = 2 + 3 * 5; int b | b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ a -> 0; }
Out:
[ ]


ExeStack:
{ int b | b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ a -> 17; }
Out:
[ ]


ExeStack:
{ int b; b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ a -> 17; }
Out:
[ ]


ExeStack:
{ b = a - 4 / 2 + 7 | print(b); }
SymTable:
{ a -> 17; b -> 0; }
Out:
[ ]


ExeStack:
{ b = a - 4 / 2 + 7; print(b); }
SymTable:
{ a -> 17; b -> 0; }
Out:
[ ]


ExeStack:
{ print(b); }
SymTable:
{ a -> 17; b -> 22; }
Out:
[ ]


ExeStack:
{ }
SymTable:
{ a -> 17; b -> 22; }
Out:
[ 22, ]


ExeStack:
{ bool a; a = true | int v | if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ }
Out:
[ ]


ExeStack:
{ a = true | int v | if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ a -> false; }
Out:
[ ]


ExeStack:
{ a = true; int v | if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ a -> false; }
Out:
[ ]


ExeStack:
{ int v | if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ a -> true; }
Out:
[ ]


ExeStack:
{ int v; if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ a -> true; }
Out:
[ ]


ExeStack:
{ if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ a -> true; v -> 0; }
Out:
[ ]


ExeStack:
{ if (a) then {v = 2} else {v = 3}; print(v); }
SymTable:
{ a -> true; v -> 0; }
Out:
[ ]


ExeStack:
{ v = 2; print(v); }
SymTable:
{ a -> true; v -> 0; }
Out:
[ ]


ExeStack:
{ print(v); }
SymTable:
{ a -> true; v -> 2; }
Out:
[ ]


ExeStack:
{ }
SymTable:
{ a -> true; v -> 2; }
Out:
[ 2, ]


ExeStack:
{ string varf; varf = test.in | openRFile(varf) | int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ }
Out:
[ ]


ExeStack:
{ varf = test.in | openRFile(varf) | int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> ; }
Out:
[ ]


ExeStack:
{ varf = test.in; openRFile(varf) | int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> ; }
Out:
[ ]


ExeStack:
{ openRFile(varf) | int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; }
Out:
[ ]


ExeStack:
{ openRFile(varf); int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; }
Out:
[ ]


ExeStack:
{ int varc | readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; }
Out:
[ ]


ExeStack:
{ int varc; readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; }
Out:
[ ]


ExeStack:
{ readFile(varf, varc) | print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 0; }
Out:
[ ]


ExeStack:
{ readFile(varf, varc); print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 0; }
Out:
[ ]


ExeStack:
{ print(varc) | readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 15; }
Out:
[ ]


ExeStack:
{ print(varc); readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 15; }
Out:
[ ]


ExeStack:
{ readFile(varf, varc) | print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 15; }
Out:
[ 15, ]


ExeStack:
{ readFile(varf, varc); print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 15; }
Out:
[ 15, ]


ExeStack:
{ print(varc) | closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 50; }
Out:
[ 15, ]


ExeStack:
{ print(varc); closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 50; }
Out:
[ 15, ]


ExeStack:
{ closeRFile(varf); }
SymTable:
{ varf -> test.in; varc -> 50; }
Out:
[ 15, 50, ]


ExeStack:
{ }
SymTable:
{ varf -> test.in; varc -> 50; }
Out:
[ 15, 50, ]


ExeStack:
{ bool a; a = 2 < 3 | int v | if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ }
Out:
[ ]


ExeStack:
{ a = 2 < 3 | int v | if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ a -> false; }
Out:
[ ]


ExeStack:
{ a = 2 < 3; int v | if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ a -> false; }
Out:
[ ]


ExeStack:
{ int v | if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ a -> true; }
Out:
[ ]


ExeStack:
{ int v; if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ a -> true; }
Out:
[ ]


ExeStack:
{ if (a) then {v = 2} else {v = 3} | print(v); }
SymTable:
{ a -> true; v -> 0; }
Out:
[ ]


ExeStack:
{ if (a) then {v = 2} else {v = 3}; print(v); }
SymTable:
{ a -> true; v -> 0; }
Out:
[ ]


ExeStack:
{ v = 2; print(v); }
SymTable:
{ a -> true; v -> 0; }
Out:
[ ]


ExeStack:
{ print(v); }
SymTable:
{ a -> true; v -> 2; }
Out:
[ ]


ExeStack:
{ }
SymTable:
{ a -> true; v -> 2; }
Out:
[ 2, ]


